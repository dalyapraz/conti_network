Timestamp	From	To	Message
2021-09-13 09:47:02.172891	hash	hash	Main IP: 172.93.205.138
Username: administrator
Password: 6M#9e#Z8tDU#B
2021-10-28 08:53:08.217241	hash	hash	Сама админка для создания ящиков
https://14740-27223.bacloud.info/postfixadmin/public/main.php
jefferson@14740-27223.bacloud.info
pass 5ZvcxDYaZRWJ4nq
А тут почтовая веб морда их
http://14740-27223.bacloud.info/webmail/
2021-11-21 19:24:44.490300	hash	hash	Входные данные:
1. список проверяемых email password - текстовый файл
2. список адрес:порт SOCKS4/SOCKS5-серверов - текстовый файл
3. список тестовых email'ов - email password - текстовый файл
4. список шаблонов тестового сообщения - текстовый файл
5. таймаут проверки
6. число потоков проверки

АЛГОРИТМ РАБОТЫ
7. валидируем email (критерии в приложении)
8. получаем MX-записи DNS для домена из email
9. получаем/генерируем все возможные варианты порт/MX/SSL/TLS и прочие расширения SMTP-протокола для безопасности и авторизации
10. для каждого из вариантов п.9 пытаемся открыть соединение через случайно выбранный socks-сервер (п.2) и авторизоваться по имеющемуся email и паролю.
Если получается авторизоваться, отправляем тестовое письмо (п.4) на тестовый почтовый ящик (п.3).
Заносим данный проверяемый email вместе с текущим временем в список pending (те, по которым ожидается результат).
Данные проверки выполняются в несколько потоков, проверяемый список делится соответственно.
11. отдельный поток проверяет тестовые почтовые ящики (п.3) по протоколу IMAP/POP3.
From: всех входящих писем сравнивается с email из списка pending. Если совпало, значит отправка через данный аккаунт работает.
Такой email заносится в выходной список годных.
Если за таймаут (п.5) не было входящего с данной почты, такой email заносится в список "таймаут".
Во всех остальных случаях email помечается как негодный.

ТРЕБОВАНИЯ
12. Работа под ОС Linux.
13. Язык реализации - предпочтительно Python, другие варианты обсуждаются.
14. Общим стремлением чекера должно быть уменьшение время сканирования. Как можно больше проверок за единицу времени - с учетом многопоточности или как угодно.


 "Язык программирования Си" авторы Керниган Ритчи
